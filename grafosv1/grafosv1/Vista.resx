<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAALAAAACwAAAAAAAAABAAAAAAAAAAIAAAAAAAAAPgAA
        ANQAAAAGAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAAPAAAA5AAAAP8AAAClAAAAYgAAAP8AAAD/AAAASQAA
        AAAAAAADAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAEAAAABAAAAAgAAAAAAAAAAAAAAAwAA
        AAAAAABVAAAA/QAAAOgAAABUAAAAAAAAAAMAAAADAAAAAAAAAEkAAAD/AAAA/wAAAGIAAAAaAAAA5wAA
        AP8AAACoAAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAEAAAAAAAAAAAAA
        AAEAAAAAAAAACAAAAN4AAAA4AAAAPwAAAOAAAAAIAAAAAAAAAAQAAAAAAAAAqAAAAP8AAADnAAAAGgAA
        AAAAAACaAAAA/wAAAPoAAAA1AAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAAAAAAIAAAA4AAAAEAAAAA/AAAA3wAAAAgAAAAAAAAAAAAAADUAAAD6AAAA/wAA
        AJkAAAAAAAAAAAAAAC0AAAD4AAAA/wAAAL4AAAAAAAAAAgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAABUAAAA5gAAAOYAAABUAAAAAAAAAAUAAAAAAAAAvgAA
        AP8AAAD4AAAALQAAAAAAAAADAAAAAAAAAIwAAAD/AAAA/wAAAIUAAAAAAAAABQAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAALAAAACgAAAAAAAAAGAAAAAAAA
        AIUAAAD/AAAA/wAAAIwAAAAAAAAAAwAAAAEAAAAAAAAACgAAAM4AAAD/AAAA/wAAAG8AAAAAAAAABAAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAACAAAABgAA
        AAAAAABvAAAA/wAAAP8AAADOAAAACgAAAAAAAAABAAAAAAAAAAIAAAAAAAAAKAAAAOoAAAD/AAAA/wAA
        AIUAAAAAAAAAAAAAAAMAAAADAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADAAAABAAA
        AAAAAAAAAAAAhQAAAP8AAAD/AAAA6QAAACgAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAMAAAAAAAAANAAA
        AOsAAAD/AAAA/wAAAMMAAAAwAAAAAAAAAAEAAAAAAAAAAgAAAAQAAAAEAAAABAAAAAQAAAACAAAAAAAA
        AAEAAAAAAAAALwAAAMMAAAD/AAAA/wAAAOsAAAA0AAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAMAAAAAAAAAJQAAANIAAAD/AAAA/gAAAPoAAACrAAAARgAAAAsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAALAAAARgAAAKoAAAD5AAAA/gAAAP8AAADSAAAAJQAAAAAAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAMAAAAAAAAACQAAAI0AAAD7AAAA/wAAAP4AAAD/AAAA5gAAALcAAACUAAAAggAA
        AIIAAACUAAAAtwAAAOUAAAD/AAAA/gAAAP8AAAD7AAAAjQAAAAkAAAAAAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAADAAAAAAAAACgAAACbAAAA6wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADsAAAAnAAAACkAAAAAAAAAAwAAAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAADAAAAAQAAAAAAAAAXAAAAYgAA
        AKcAAADUAAAA7gAAAPkAAAD5AAAA7gAAANUAAACnAAAAYgAAABcAAAAAAAAAAQAAAAMAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA9EACL+kAAJfUAAArqAQgFVAoBAqggAMFQQvkgkKVSkKFCIUhhAVKoQoE
        hBAJCQKQCkUCkBElBMgSoiTIE1BkyBOgIsgToFJIE5CSiAmpUVAJ0JCQCOkgUIV/oCGEv5ChQl+pQkEn
        0IKgwAEFUCgECqgEIBXUAAAr6QAAl/RAAi8=
</value>
  </data>
</root>